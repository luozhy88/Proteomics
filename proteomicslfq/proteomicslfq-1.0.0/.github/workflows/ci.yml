name: nf-core CI
# This workflow is triggered on pushes and PRs to the repository.
# It runs the pipeline with the minimal test dataset to check that it completes without any syntax errors
on:
  push:
    branches:
      - dev
  pull_request:
  release:
    types: [published]

jobs:
  test:
    env:
      NXF_VER: ${{ matrix.nxf_ver }}
      NXF_ANSI_LOG: false
      TOWER_ACCESS_TOKEN: ${{ secrets.NONAWS_TOWER_ACCESS_TOKEN }}
      TEST_PROFILE: ${{ matrix.test_profile }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Nextflow versions: check pipeline minimum and current latest
        nxf_ver: ['20.01.0', '']
        test_profile: ['test', 'test_localize', 'test_speccount']
    steps:
      - uses: actions/checkout@v2
      - name: Determine tower usage
        shell: bash
        run: echo "::set-env name=TOWER::`[ -z "$TOWER_ACCESS_TOKEN" ] && echo '' || echo '-with-tower'`"
        id: tower_usage
      - name: Extract branch name
        if: github.event_name == 'push'
        shell: bash
        run: |
          ref=`jq --raw-output .ref "$GITHUB_EVENT_PATH"`
          ref=${ref#"refs/heads/"}
          ref=${ref#"refs/"}
          ref=${ref//\//-}
          echo "::set-env name=RUN_NAME::$ref"
        id: extract_branch
      - name: Extract PR number
        if: github.event_name == 'pull_request'
        shell: bash
        run: echo "::set-env name=RUN_NAME::PR`jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH"`"
        id: extract_pr
      - name: Check if Dockerfile or Conda environment changed
        uses: technote-space/get-diff-action@v1
        with:
          PREFIX_FILTER: |
            Dockerfile
            environment.yml
      - name: Build new docker image
        if: env.GIT_DIFF
        run: docker build --no-cache . -t nfcore/proteomicslfq:1.0.0
      - name: Pull docker image
        if: ${{ !env.GIT_DIFF }}
        run: |
          docker pull nfcore/proteomicslfq:dev
          docker tag nfcore/proteomicslfq:dev nfcore/proteomicslfq:1.0.0
      - name: Install Nextflow
        run: |
          wget -qO- get.nextflow.io | bash
          sudo mv nextflow /usr/local/bin/
      - name: Run pipeline with test data
        run: |
          nextflow run ${GITHUB_WORKSPACE} "$TOWER" -name "$RUN_NAME" -profile $TEST_PROFILE,docker --outdir ${TEST_PROFILE}_results
      - name: Gather failed logs
        if: failure() || cancelled()
        run: |
          mkdir failed_logs
          failed=$(grep "FAILED" ${TEST_PROFILE}_results/pipeline_info/execution_trace.txt | cut -f 2)
          while read -r line ; do cp $(ls work/${line}*/*.log) failed_logs/ | true ; done <<< "$failed"
      - uses: actions/upload-artifact@v1
        if: failure() || cancelled()
        name: Upload failed logs
        with:
          name: failed_logs
          path: failed_logs
      - uses: actions/upload-artifact@v1
        if: always()
        name: Upload results
        with:
          name: ${{ env.TEST_PROFILE }}_results
          path: ${{ env.TEST_PROFILE }}_results
      - uses: actions/upload-artifact@v1
        if: always()
        name: Upload log
        with:
          name: nextflow.log
          path: .nextflow.log


  push_dockerhub:
    name: Push new Docker image to Docker Hub
    runs-on: ubuntu-latest
    # Only run if the tests passed
    needs: test
    # Only run for the nf-core repo, for releases and merged PRs
    if: ${{ github.repository == 'nf-core/proteomicslfq' && (github.event_name == 'release' || github.event_name == 'push') }}
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASS: ${{ secrets.DOCKERHUB_PASS }}
    steps:
      - name: Check out pipeline code
        uses: actions/checkout@v2

      - name: Build new docker image
        run: docker build --no-cache . -t nfcore/proteomicslfq:latest

      - name: Push Docker image to DockerHub (dev)
        if: ${{ github.event_name == 'push' }}
        run: |
          echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
          docker tag nfcore/proteomicslfq:latest nfcore/proteomicslfq:dev
          docker push nfcore/proteomicslfq:dev
      - name: Push Docker image to DockerHub (release)
        if: ${{ github.event_name == 'release' }}
        run: |
          echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
          docker push nfcore/proteomicslfq:latest
          docker tag nfcore/proteomicslfq:latest nfcore/proteomicslfq:${{ github.ref }}
          docker push nfcore/proteomicslfq:${{ github.ref }}
